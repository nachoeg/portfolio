---
import type { GetStaticPaths } from "astro";
import Layout from "@/layouts/Layout.astro";
import { PROJECTS } from "@/data/projects.js";
import Tags from "@/components/Tags.astro";
import LinkButton from "@/components/LinkButton.astro";
import World from "@/icons/World.astro";
import Github from "@/icons/Github.astro";
import VSCodeOutlined from "@/icons/VSCodeOutlined.astro";

export const getStaticPaths = (() => {
  const paths = PROJECTS.map((project) => ({
    params: { project: project.id },
  }));
  return paths;
}) satisfies GetStaticPaths;

const { project } = Astro.params;

let Content;
try {
  Content = await import(`../../articles/${project}.md`)
    .then((c) => c.Content)
    .catch((e) => e);
} catch (error) {
  console.error("No se encontro el archivo contenido!");
}

const info = PROJECTS.find((p) => p.id === project);

if (!info) {
  return Astro.redirect("/404");
}
---

<Layout title={info.title} description={info.description}>
  <main class="mx-auto px-4 py-20 sm:py-36 space-y-10 sm:space-y-20">
    <section>
      <h1 class="text-5xl sm:text-7xl font-bold mb-6 text-center">
        {info.title}
      </h1>
      <h2
        class="text-center text-balance text-neutral-700 dark:text-neutral-500 max-w-prose mx-auto"
      >
        {info.description}
      </h2>
    </section>

    <section
      class="space-y-10 sm:space-y-0 text-center sm:grid grid-cols-3 max-w-[500px] mx-auto [&_div]:col-span-1 [&_div_>_p]:mb-1 [&_div_>_p]:text-neutral-700 [&_div_>_p]:dark:text-neutral-400 center"
    >
      <div>
        <p>Fecha</p>
        {info.date}
      </div>
      <div>
        <p>Tecnologias</p>
        <Tags classList="justify-center" tags={info.tags} />
      </div>
      <div>
        <p>Links</p>
        <div class="flex flex-col gap-1 items-center">
          {
            info.links &&
              info.links.map((link) => (
                <LinkButton
                  target="_blank"
                  rel="noopener"
                  href={link.url}
                  small
                >
                  {link.name}
                  {link.icon === "link" && <World class="size-5" />}
                  {link.icon === "github" && <Github class="size-5" />}
                  {link.icon === "vscode" && <VSCodeOutlined class="size-5" />}
                </LinkButton>
              ))
          }
          {!info.links && "No hay links disponibles"}
        </div>
      </div>
    </section>

    <section class="flex md:mx-6 place-content-center">
      <img
        transition:name=`imageProject${info.id}`
        src={info.image}
        alt={info.title}
        class="rounded-xl sm:rounded-3xl p-1 sm:p-2 bg-black/10 dark:bg-white/10"
      />
    </section>

    <section
      class="mx-auto max-w-prose prose lg:prose-xl dark:prose-invert prose-a:text-blue-500 dark:prose-a:text-blue-500
      marker:text-neutral-800 dark:marker:text-neutral-200
      [&_details]:bg-neutral-200 dark:[&_details]:bg-neutral-900 [&_details]:rounded-md [&_details]:px-3 last:[&_details>*]:pb-6 [&_details]:my-3
      [&_summary]:hover:cursor-pointer [&_summary]:font-bold [&_summary]:text-neutral-800 dark:[&_summary]:text-neutral-200
      prose-img:rounded-xl prose-img:transition-all prose-img:p-1 prose-img:bg-black/5 dark:prose-img:bg-white/5
      prose-img:z-0 prose-img:shadow lg:prose-img:shadow-md
      hover:[&_figure]:scale-105
      prose-figure:max-w-fit prose-figure:transition-all prose-figure:mx-auto prose-figure:relative
      prose-figcaption:relative
      prose-figcaption:max-w-fit prose-figcaption:min-w-fit prose-figcaption:mx-auto prose-figcaption:text-center prose-figcaption:text-nowrap prose-figcaption:px-2 prose-figcaption:rounded-b-md prose-figcaption:shadow-md prose-figcaption:z-10 prose-figcaption:-mt-1
      prose-figcaption:text-neutral-600 dark:prose-figcaption:text-neutral-400
      prose-figcaption:bg-[#ededed] dark:prose-figcaption:bg-[#161616]"
    >
      <Content />
    </section>
  </main>
</Layout>
