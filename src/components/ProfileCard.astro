---
const personalImageAlt = "Ignacio Escudero Gonzalez";
import Badge from "./Badge.astro";
import MapPin from "../icons/MapPin.astro";
---

<div class="wrapper mx-auto md:mr-0 mt-6 md:mt-0 group">
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>
  <div class="tracker"></div>

  <div
    id="profileCard"
    class="border-x border-violet-200 dark:border-neutral-800"
  >
    <div id="foto-perfil" class="relative">
      <img
        class="rounded-full shadow-xl p-1 mb-4 size-56 bg-white/5 relative"
        src="/assets/foto-perfil.jpg"
        loading={"eager"}
        alt={personalImageAlt}
      />
      <div class="absolute bottom-2 right-0 left-0">
        <Badge />
      </div>
    </div>

    <h1 class="font-bold text-lg mt-5" id="nombre">
      Ignacio Escudero Gonzalez
    </h1>
    <span class="flex gap-1 items-center" id="ubicacion">
      <MapPin class="size-4" />
      Buenos Aires, Argentina
    </span>
  </div>
</div>
<style>
  .wrapper {
    position: relative;
    display: grid;
    grid-template: repeat(5, 1fr) / repeat(5, 1fr);
    align-items: center;
    place-self: center;
    /* outline: 4px dotted blue; */
    animation:
      1.2s appear 0s both,
      3s float 1.8s both infinite;
  }

  #profileCard {
    @apply py-7 px-5 rounded-3xl bg-white dark:bg-neutral-900;
    display: flex;
    position: relative;
    flex-direction: column;
    margin-inline: auto;
    align-items: center;
    max-width: fit-content;
    height: fit-content;
    min-width: fit-content;
    text-align: center;
    /* opacity: 1; */
    z-index: 0;
    transform-style: preserve-3d;
    transform: perspective(500px) rotateY(var(--rotateX))
      rotateX(var(--rotateY));
    grid-row: 1 / -1;
    grid-column: 1 / -1;
    transition: transform 250ms linear;
    animation: incline-topright 1.6s;
  }

  #profileCard > * {
    transition: all 0.2s ease-in-out;
  }

  #profileCard::before {
    content: "";
    position: absolute;
    border-radius: inherit;
    width: 100%;
    height: 100%;
    /* display: none; */
    scale: 1;
    filter: blur(25px);
    z-index: -10;
    background: linear-gradient(
      43deg,
      rgb(65, 88, 208) 0%,
      rgb(200, 80, 192) 46%,
      rgb(255, 204, 112) 100%
    );
    opacity: 1;
    transition: all 300ms;
    transform: translateZ(-50px);
    animation:
      /* fade-in 1s both 500ms, */
      grow 1.4s cubic-bezier(0, 0, 0, 1) 0s both,
      glow 1.5s ease-in 1.4s infinite both alternate;
  }

  #profileCard::after {
    content: "";
    position: absolute;
    border-radius: inherit;
    width: 100%;
    height: 100%;
    /* display: none; */
    scale: 1;
    background: linear-gradient(
      43deg,
      rgb(65, 88, 208) 0%,
      rgb(200, 80, 192) 46%,
      rgb(255, 204, 112) 100%
    );
    /* @apply bg-neutral-500; */
    opacity: 0.5;
    transition: all 300ms;
    transform: translateZ(-50px) translateY(-20px);
  }

  .tracker:hover ~ #profileCard > #foto-perfil {
    transform: translateZ(60px);
  }

  .tracker:hover ~ #profileCard > #nombre {
    transform: translateZ(50px);
  }

  .tracker:hover ~ #profileCard > #ubicacion {
    transform: translateZ(50px);
  }

  .tracker:hover ~ #profileCard > #descripcion {
    transform: translateZ(50px);
  }

  #foto-perfil,
  #nombre,
  #ubicacion,
  #descripcion {
    animation-duration: 0.8s;
  }

  #foto-perfil {
    animation-delay: 1s;
  }

  #nombre,
  #ubicacion {
    animation-delay: 1.1s;
  }

  #descripcion {
    animation-delay: 2.2s;
  }

  .tracker {
    z-index: 30;
    position: absolute;
    /* outline: green 1px solid; */
  }

  .tracker:nth-child(1) {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    inset: 0;
  }

  .tracker:nth-child(2) {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    inset: 0;
  }

  .tracker:nth-child(3) {
    grid-column: 3 / 4;
    grid-row: 1 / 2;
    inset: 0;
  }

  .tracker:nth-child(4) {
    grid-column: 4 / 5;
    grid-row: 1 / 2;
    inset: 0;
  }

  .tracker:nth-child(5) {
    grid-column: 5 / 6;
    grid-row: 1 / 2;
    inset: 0;
  }

  .tracker:nth-child(6) {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
    inset: 0;
  }

  .tracker:nth-child(7) {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
    inset: 0;
  }

  .tracker:nth-child(8) {
    grid-column: 3 / 4;
    grid-row: 2 / 3;
    inset: 0;
  }

  .tracker:nth-child(9) {
    grid-column: 4 / 5;
    grid-row: 2 / 3;
    inset: 0;
  }

  .tracker:nth-child(10) {
    grid-column: 5 / 6;
    grid-row: 2 / 3;
    inset: 0;
  }

  .tracker:nth-child(11) {
    grid-column: 1 / 2;
    grid-row: 3 / 4;
    inset: 0;
  }

  .tracker:nth-child(12) {
    grid-column: 2 / 3;
    grid-row: 3 / 4;
    inset: 0;
  }

  .tracker:nth-child(13) {
    grid-column: 3 / 4;
    grid-row: 3 / 4;
    inset: 0;
  }

  .tracker:nth-child(14) {
    grid-column: 4 / 5;
    grid-row: 3 / 4;
    inset: 0;
  }

  .tracker:nth-child(15) {
    grid-column: 5 / 6;
    grid-row: 3 / 4;
    inset: 0;
  }

  .tracker:nth-child(16) {
    grid-column: 1 / 2;
    grid-row: 4 / 5;
    inset: 0;
  }

  .tracker:nth-child(17) {
    grid-column: 2 / 3;
    grid-row: 4 / 5;
    inset: 0;
  }

  .tracker:nth-child(18) {
    grid-column: 3 / 4;
    grid-row: 4 / 5;
    inset: 0;
  }

  .tracker:nth-child(19) {
    grid-column: 4 / 5;
    grid-row: 4 / 5;
    inset: 0;
  }

  .tracker:nth-child(20) {
    grid-column: 5 / 6;
    grid-row: 4 / 5;
    inset: 0;
  }

  .tracker:nth-child(21) {
    grid-column: 1 / 2;
    grid-row: 5 / 6;
    inset: 0;
  }

  .tracker:nth-child(22) {
    grid-column: 2 / 3;
    grid-row: 5 / 6;
    inset: 0;
  }

  .tracker:nth-child(23) {
    grid-column: 3 / 4;
    grid-row: 5 / 6;
    inset: 0;
  }

  .tracker:nth-child(24) {
    grid-column: 4 / 5;
    grid-row: 5 / 6;
    inset: 0;
  }

  .tracker:nth-child(25) {
    grid-column: 5 / 6;
    grid-row: 5 / 6;
    inset: 0;
  }

  .tracker:nth-child(1):hover ~ #profileCard {
    --rotateX: -25deg;
    --rotateY: 25deg;
  }

  .tracker:nth-child(2):hover ~ #profileCard {
    --rotateX: -12deg;
    --rotateY: 25deg;
  }

  .tracker:nth-child(3):hover ~ #profileCard {
    --rotateX: 0deg;
    --rotateY: 25deg;
  }

  .tracker:nth-child(4):hover ~ #profileCard {
    --rotateX: 12deg;
    --rotateY: 25deg;
  }

  .tracker:nth-child(5):hover ~ #profileCard {
    --rotateX: 25deg;
    --rotateY: 25deg;
  }

  .tracker:nth-child(6):hover ~ #profileCard {
    --rotateX: -25deg;
    --rotateY: 12deg;
  }

  .tracker:nth-child(7):hover ~ #profileCard {
    --rotateX: -12deg;
    --rotateY: 12deg;
  }

  .tracker:nth-child(8):hover ~ #profileCard {
    --rotateX: 0deg;
    --rotateY: 12deg;
  }

  .tracker:nth-child(9):hover ~ #profileCard {
    --rotateX: 12deg;
    --rotateY: 12deg;
  }

  .tracker:nth-child(10):hover ~ #profileCard {
    --rotateX: 25deg;
    --rotateY: 12deg;
  }

  .tracker:nth-child(11):hover ~ #profileCard {
    --rotateX: -25deg;
    --rotateY: 0deg;
  }

  .tracker:nth-child(12):hover ~ #profileCard {
    --rotateX: -12deg;
    --rotateY: 0deg;
  }

  .tracker:nth-child(13):hover ~ #profileCard {
    --rotateX: 0deg;
    --rotateY: 0deg;
  }

  .tracker:nth-child(14):hover ~ #profileCard {
    --rotateX: 12deg;
    --rotateY: 0deg;
  }

  .tracker:nth-child(15):hover ~ #profileCard {
    --rotateX: 25deg;
    --rotateY: 0deg;
  }

  .tracker:nth-child(16):hover ~ #profileCard {
    --rotateX: -25deg;
    --rotateY: -12deg;
  }

  .tracker:nth-child(17):hover ~ #profileCard {
    --rotateX: -12deg;
    --rotateY: -12deg;
  }

  .tracker:nth-child(18):hover ~ #profileCard {
    --rotateX: 0deg;
    --rotateY: -12deg;
  }

  .tracker:nth-child(19):hover ~ #profileCard {
    --rotateX: 12deg;
    --rotateY: -12deg;
  }

  .tracker:nth-child(20):hover ~ #profileCard {
    --rotateX: 25deg;
    --rotateY: -12deg;
  }

  .tracker:nth-child(21):hover ~ #profileCard {
    --rotateX: -25deg;
    --rotateY: -25deg;
  }

  .tracker:nth-child(22):hover ~ #profileCard {
    --rotateX: -12deg;
    --rotateY: -25deg;
  }

  .tracker:nth-child(23):hover ~ #profileCard {
    --rotateX: 0deg;
    --rotateY: -25deg;
  }

  .tracker:nth-child(24):hover ~ #profileCard {
    --rotateX: 12deg;
    --rotateY: -25deg;
  }

  .tracker:nth-child(25):hover ~ #profileCard {
    --rotateX: 25deg;
    --rotateY: -25deg;
  }

  .no-select {
    -webkit-touch-callout: none;
    /* iOS Safari */
    -webkit-user-select: none;
    /* Safari */
    /* Konqueror HTML */
    -moz-user-select: none;
    /* Old versions of Firefox */
    -ms-user-select: none;
    /* Internet Explorer/Edge */
    user-select: none;
    /* Non-prefixed version, currently
									supported by Chrome, Edge, Opera and Firefox */
  }
</style>
<!-- <script is:inline>
  document.addEventListener("astro:page-load", () => {
    const card = document.querySelector("#profileCard");
    // const cardAnimationArea = document.querySelector(".cardAnimationArea");

    card.addEventListener("mouseleave", () => {
      card.style.setProperty("--rotateY", "0deg");
      card.style.setProperty("--rotateX", "0deg");
    });

    document.addEventListener("mousemove", (event) => {
      rotateElement(event, card);
    });

    function rotateElement(event, element) {
      //get mouse position
      const x = event.clientX;
      const y = event.clientY;
      //find the middle
      const middleX = element.offsetLeft + element.offsetWidth / 2;
      const middleY = element.offsetTop + element.offsetHeight / 2;
      //find the distance from the middle to the mouse
      const distanceX = x - middleX;
      const distanceY = y - middleY;
      //calculate the rotation
      const rotateX = (distanceX / middleX) * 45;
      const rotateY = (distanceY / middleY) * 45;
      //apply the rotation
      element.style.setProperty("--rotateY", rotateX + "deg");
      element.style.setProperty("--rotateX", -1 * rotateY + "deg");
    }
  });
</script> -->
